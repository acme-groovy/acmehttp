/* GRADLE  */
//apply plugin: "groovy"
//apply plugin: "maven"
//apply plugin: "maven-publish"

plugins {
	id "maven"
	id "maven-publish"
	id "groovy"
    id "com.jfrog.bintray" version "1.8.0"
}
repositories {
    jcenter()
}


group = "acme-groovy"
version = new Date().format("yyyyMMdd")

new File("local.properties").with{f->
	new Properties().with{p->
		if(f.exists()){
			println "load $f"
			p.load(f.newInputStream())
		}else{
			println "create $f"
			p.brKey="bintray api key"
			p.brUser="bintray user"
			p.store(f.newOutputStream(), "private system properties")
		}
		System.getProperties().putAll(p)
	}
}

dependencies {
	compile(
		[group: "org.codehaus.groovy",   name: "groovy-all"   	        , version: "2.4.12"],

	)
}

task all(dependsOn: [clean, install, bintrayUpload])

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
//            groupId "$group"
//            artifactId "${rootProject.name}"
//            version "$version"
        }
    }
}

def require={v,m->
	assert v : m
	return v
}

bintray {
    user = System.getProperty("brUser") ?: "use `-DbrKey=...` parameter"
    key  = System.getProperty("brKey")  ?: "use `-DbrUser=...` parameter"
    publications = ["MyPublication"]
    pkg {
        repo     = "repo"
        name     = rootProject.name
        userOrg  = rootProject.group
        licenses = ["Apache-2.0"]
        vcsUrl   = "https://github.com/acme-groovy/acmehttp.git"
		publicDownloadNumbers = true
		/*
		version {
			name = version
			desc = "plain http client optimized for groovy language"
			released  = new Date()
		}
		*/
    }
}

